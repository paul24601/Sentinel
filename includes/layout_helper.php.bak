<?php
/**
 * Layout Helper Component
 * Centralized layout management and utilities
 * 
 * @author Sentinel Development Team
 * @date August 20, 2025
 */

// Include navigation configuration
$config_path = dirname(__FILE__) . '/navigation_config.php';
if (file_exists($config_path)) {
    require_once $config_path;
} else {
    $base_path = getBasePath(__FILE__);
    require_once $base_path . 'includes/navigation_config.php';
}

/**
 * Generate standard page header with all necessary includes
 */
function generatePageHeader($page_title = 'Sentinel OJT', $additional_css = [], $include_datatables = false, $include_charts = false) {
    $base_path = getBasePath(__FILE__);
    
    echo '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>' . htmlspecialchars($page_title) . '</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <!-- Custom CSS -->';
    
    if ($include_datatables) {
        echo '
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">';
    }
    
    if ($include_charts) {
        echo '
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>';
    }
    
    foreach ($additional_css as $css_file) {
        echo '
    <link rel="stylesheet" href="' . htmlspecialchars($css_file) . '">';
    }
    
    echo '
    
    <!-- Sentinel Custom Styles -->
    <style>
        body {
            padding-top: 56px; /* Account for fixed navbar */
            background-color: #f8f9fa;
        }
        
        .main-content {
            margin-left: 0;
            transition: margin-left 0.3s;
        }
        
        @media (min-width: 768px) {
            .main-content {
                margin-left: 16.66667%; /* 2/12 cols for sidebar */
            }
        }
        
        .content-wrapper {
            min-height: calc(100vh - 56px);
            padding: 0;
        }
        
        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            border: none;
        }
        
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #e3e6f0;
        }
        
        .btn {
            font-weight: 400;
            border-radius: 0.35rem;
        }
        
        .table th {
            border-top: none;
            font-weight: 600;
            color: #5a5c69;
        }
        
        .sidebar-brand-text {
            font-weight: 700;
            color: #5a5c69;
        }
        
        .text-gray-800 {
            color: #5a5c69 !important;
        }
        
        .text-gray-900 {
            color: #3a3b45 !important;
        }
        
        .border-left-primary {
            border-left: 0.25rem solid #4e73df !important;
        }
        
        .border-left-success {
            border-left: 0.25rem solid #1cc88a !important;
        }
        
        .border-left-info {
            border-left: 0.25rem solid #36b9cc !important;
        }
        
        .border-left-warning {
            border-left: 0.25rem solid #f6c23e !important;
        }
        
        .alert {
            border-radius: 0.35rem;
        }
        
        .progress {
            height: 0.5rem;
        }
        
        /* Loading spinner */
        .loading-spinner {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 9999;
        }
        
        /* Notification styles */
        .notification-toast {
            position: fixed;
            top: 80px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
        }
        
        /* Custom form styles */
        .form-control:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }
        
        .form-select:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }
        
        /* Animation utilities */
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .slide-in {
            animation: slideIn 0.3s ease-out;
        }
        
        @keyframes slideIn {
            from { transform: translateX(-100%); }
            to { transform: translateX(0); }
        }
        
        /* Responsive adjustments */
        @media (max-width: 767.98px) {
            .main-content {
                margin-left: 0;
            }
            
            .card {
                margin-bottom: 1rem;
            }
            
            .table-responsive {
                font-size: 0.875rem;
            }
        }
    </style>
</head>
<body>';
}

/**
 * Generate page footer with scripts
 */
function generatePageFooter($additional_scripts = [], $include_datatables = false, $include_charts = false) {
    $base_path = getBasePath(__FILE__);
    
    echo '
    <!-- Loading Spinner -->
    <div class="loading-spinner">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    
    <!-- Toast Container -->
    <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer"></div>
    
    <!-- Bootstrap 5 JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>';
    
    if ($include_datatables) {
        echo '
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>';
    }
    
    foreach ($additional_scripts as $script_file) {
        echo '
    <script src="' . htmlspecialchars($script_file) . '"></script>';
    }
    
    echo '
    
    <!-- Sentinel Common JavaScript -->
    <script>
        // Global utility functions
        window.SentinelUtils = {
            // Show loading spinner
            showLoading: function() {
                document.querySelector(".loading-spinner").style.display = "block";
            },
            
            // Hide loading spinner
            hideLoading: function() {
                document.querySelector(".loading-spinner").style.display = "none";
            },
            
            // Show toast notification
            showToast: function(message, type = "info", duration = 5000) {
                const toastContainer = document.getElementById("toastContainer");
                const toastId = "toast-" + Date.now();
                
                const toastHTML = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" id="${toastId}">
                        <div class="d-flex">
                            <div class="toast-body">
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `;
                
                toastContainer.insertAdjacentHTML("beforeend", toastHTML);
                
                const toastElement = document.getElementById(toastId);
                const toast = new bootstrap.Toast(toastElement, { delay: duration });
                toast.show();
                
                // Remove toast element after it hides
                toastElement.addEventListener("hidden.bs.toast", function() {
                    toastElement.remove();
                });
            },
            
            // Format date/time
            formatDateTime: function(timestamp) {
                const date = new Date(timestamp);
                return date.toLocaleDateString() + " " + date.toLocaleTimeString();
            },
            
            // Format file size
            formatFileSize: function(bytes) {
                if (bytes === 0) return "0 Bytes";
                const k = 1024;
                const sizes = ["Bytes", "KB", "MB", "GB"];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
            },
            
            // Confirm dialog
            confirm: function(message, callback) {
                if (confirm(message)) {
                    callback();
                }
            },
            
            // AJAX helper
            ajax: function(url, options = {}) {
                const defaults = {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json",
                        "X-Requested-With": "XMLHttpRequest"
                    }
                };
                
                const config = Object.assign(defaults, options);
                
                if (config.data && config.method !== "GET") {
                    config.body = JSON.stringify(config.data);
                }
                
                this.showLoading();
                
                return fetch(url, config)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }
                        return response.json();
                    })
                    .catch(error => {
                        this.showToast("An error occurred: " + error.message, "danger");
                        throw error;
                    })
                    .finally(() => {
                        this.hideLoading();
                    });
            }
        };
        
        // Initialize DataTables with common settings
        if (typeof $.fn.DataTable !== "undefined") {
            $.extend(true, $.fn.dataTable.defaults, {
                responsive: true,
                pageLength: 25,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                dom: "<\"row\"<\"col-sm-12 col-md-6\"l><\"col-sm-12 col-md-6\"f>>" +
                     "<\"row\"<\"col-sm-12\"tr>>" +
                     "<\"row\"<\"col-sm-12 col-md-5\"i><\"col-sm-12 col-md-7\"p>>",
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search records...",
                    lengthMenu: "Show _MENU_ entries",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    infoEmpty: "No entries found",
                    infoFiltered: "(filtered from _MAX_ total entries)",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });
        }
        
        // Auto-hide alerts after 5 seconds
        document.addEventListener("DOMContentLoaded", function() {
            const alerts = document.querySelectorAll(".alert:not(.alert-permanent)");
            alerts.forEach(function(alert) {
                setTimeout(function() {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }, 5000);
            });
        });
        
        // Add fade-in animation to cards
        document.addEventListener("DOMContentLoaded", function() {
            const cards = document.querySelectorAll(".card");
            cards.forEach(function(card, index) {
                setTimeout(function() {
                    card.classList.add("fade-in");
                }, index * 100);
            });
        });
        
        // Form validation helper
        function validateForm(formElement) {
            const requiredFields = formElement.querySelectorAll("[required]");
            let isValid = true;
            
            requiredFields.forEach(function(field) {
                if (!field.value.trim()) {
                    field.classList.add("is-invalid");
                    isValid = false;
                } else {
                    field.classList.remove("is-invalid");
                    field.classList.add("is-valid");
                }
            });
            
            return isValid;
        }
        
        // Export data helper
        function exportData(format = "csv", data = null, filename = "export") {
            if (!data) {
                SentinelUtils.showToast("No data to export", "warning");
                return;
            }
            
            let content, mimeType, extension;
            
            if (format === "csv") {
                content = convertToCSV(data);
                mimeType = "text/csv";
                extension = "csv";
            } else if (format === "json") {
                content = JSON.stringify(data, null, 2);
                mimeType = "application/json";
                extension = "json";
            }
            
            const blob = new Blob([content], { type: mimeType });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            a.href = url;
            a.download = filename + "." + extension;
            a.click();
            window.URL.revokeObjectURL(url);
        }
        
        function convertToCSV(data) {
            if (!Array.isArray(data) || data.length === 0) return "";
            
            const headers = Object.keys(data[0]);
            const csvHeaders = headers.join(",");
            
            const csvRows = data.map(row => {
                return headers.map(header => {
                    const value = row[header] || "";
                    return typeof value === "string" && value.includes(",") ? `"${value}"` : value;
                }).join(",");
            });
            
            return [csvHeaders, ...csvRows].join("\\n");
        }
    </script>
</body>
</html>';
}

/**
 * Start page layout
 */
function startPageLayout($page_title = 'Sentinel OJT', $layout_type = 'sidebar', $options = []) {
    $base_path = getBasePath(__FILE__);
    
    // Default options
    $defaults = [
        'include_datatables' => false,
        'include_charts' => false,
        'additional_css' => [],
        'additional_scripts' => [],
        'show_breadcrumb' => true,
        'sidebar_collapsed' => false
    ];
    
    $options = array_merge($defaults, $options);
    
    // Generate header
    generatePageHeader(
        $page_title, 
        $options['additional_css'], 
        $options['include_datatables'], 
        $options['include_charts']
    );
    
    // Include navigation components based on layout type
    if ($layout_type === 'sidebar') {
        // Include navbar - use absolute path from includes directory
        include dirname(__FILE__) . '/navbar.php';
        
        echo '<div class="container-fluid">
                <div class="row">
                    <div class="col-md-3 col-lg-2 d-md-block sidebar-container">';
        
        // Include sidebar - use absolute path from includes directory
        include dirname(__FILE__) . '/sidebar.php';
        
        echo '    </div>
                  <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
                    <div class="content-wrapper">';
        
        // Include breadcrumb if requested
        if ($options['show_breadcrumb']) {
            include dirname(__FILE__) . '/breadcrumb.php';
        }
        
        echo '      <div class="container-fluid py-4">';
        
    } elseif ($layout_type === 'navbar_only') {
        // Include only navbar - use absolute path
        include dirname(__FILE__) . '/navbar.php';
        
        echo '<div class="main-content">
                <div class="content-wrapper">';
        
        if ($options['show_breadcrumb']) {
            include dirname(__FILE__) . '/breadcrumb.php';
        }
        
        echo '    <div class="container-fluid py-4">';
        
    } elseif ($layout_type === 'minimal') {
        // Minimal layout - no navigation
        echo '<div class="container-fluid">
                <div class="py-4">';
    }
}

/**
 * End page layout
 */
function endPageLayout($layout_type = 'sidebar', $options = []) {
    $defaults = [
        'include_datatables' => false,
        'include_charts' => false,
        'additional_scripts' => []
    ];
    
    $options = array_merge($defaults, $options);
    
    if ($layout_type === 'sidebar') {
        echo '        </div> <!-- container-fluid -->
                    </div> <!-- content-wrapper -->
                  </main>
                </div> <!-- row -->
              </div> <!-- container-fluid -->';
    } elseif ($layout_type === 'navbar_only') {
        echo '    </div> <!-- container-fluid -->
                </div> <!-- content-wrapper -->
              </div> <!-- main-content -->';
    } elseif ($layout_type === 'minimal') {
        echo '  </div> <!-- py-4 -->
              </div> <!-- container-fluid -->';
    }
    
    // Generate footer
    generatePageFooter(
        $options['additional_scripts'], 
        $options['include_datatables'], 
        $options['include_charts']
    );
}

/**
 * Quick alert helper
 */
function showAlert($message, $type = 'info', $dismissible = true, $permanent = false) {
    $permanent_class = $permanent ? 'alert-permanent' : '';
    $dismissible_html = $dismissible ? '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' : '';
    
    echo '<div class="alert alert-' . $type . ' ' . $permanent_class . ' fade show" role="alert">
            ' . htmlspecialchars($message) . '
            ' . $dismissible_html . '
          </div>';
}

/**
 * Generate status badge
 */
function statusBadge($status, $custom_classes = []) {
    $status_classes = [
        'pending' => 'bg-warning',
        'approved' => 'bg-success',
        'declined' => 'bg-danger',
        'active' => 'bg-success',
        'inactive' => 'bg-secondary',
        'completed' => 'bg-info',
        'draft' => 'bg-light text-dark'
    ];
    
    $class = $status_classes[strtolower($status)] ?? 'bg-secondary';
    $additional_classes = implode(' ', $custom_classes);
    
    return '<span class="badge ' . $class . ' ' . $additional_classes . '">' . 
           htmlspecialchars(ucfirst($status)) . '</span>';
}
?>
